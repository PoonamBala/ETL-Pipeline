#POSTGRE SQL

-- SCHEMA: etl

-- DROP SCHEMA IF EXISTS etl ;

CREATE SCHEMA IF NOT EXISTS etl
    AUTHORIZATION postgres;

GRANT ALL ON SCHEMA etl TO etl;

GRANT ALL ON SCHEMA etl TO postgres;

-- Table: etl.etlextractlog

-- DROP TABLE IF EXISTS etl.etlextractlog;

CREATE TABLE IF NOT EXISTS etl.etlextractlog
(
    extractlogid integer NOT NULL DEFAULT nextval('etl.etlextractlog_extractlogid_seq'::regclass),
    processlogid integer NOT NULL,
    tablename character varying(200) COLLATE pg_catalog."default" NOT NULL,
    extractrowcount integer NOT NULL DEFAULT 0,
    starttime timestamp without time zone NOT NULL,
    endtime timestamp without time zone,
    lastextractdatetime timestamp without time zone,
    success integer NOT NULL DEFAULT 0,
    status character(1) COLLATE pg_catalog."default" NOT NULL,
    errormessage character varying(500) COLLATE pg_catalog."default",
    CONSTRAINT etlextractlog_pkey PRIMARY KEY (extractlogid)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS etl.etlextractlog
    OWNER to postgres;

GRANT ALL ON TABLE etl.etlextractlog TO etl;

GRANT ALL ON TABLE etl.etlextractlog TO postgres;

--create etl user
CREATE USER etl WITH PASSWORD 'demopass';
--grant connect
GRANT CONNECT ON DATABASE "AdventureWorks" TO etl;
--grant table permissions
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO etl;

-- Database: AdventureWorks

-- DROP DATABASE "AdventureWorks";

CREATE DATABASE "AdventureWorks"
    WITH 
    OWNER = postgres
    ENCODING = 'UTF8'
    LC_COLLATE = 'English_United States.1252'
    LC_CTYPE = 'English_United States.1252'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1;

ALTER TABLE public.stg_customer
 ADD CONSTRAINT stg_customer_uq UNIQUE ("customerId");


